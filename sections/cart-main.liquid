<section class="cart-main">
  <div class="container">
    <div class="cart__header">
      <h1 class="cart__title">Shopping Cart</h1>
      {% if cart.item_count > 0 %}
        <p class="cart__count">{{ cart.item_count }} item{% unless cart.item_count == 1 %}s{% endunless %} in your cart</p>
      {% endif %}
    </div>

    {% if cart.item_count > 0 %}
      <div class="cart__layout">
        <div class="cart__items">
          <form action="{{ routes.cart_url }}" method="post" novalidate class="cart-form">
            <div class="cart-items">
              {% for item in cart.items %}
                <div class="cart-item" data-line="{{ forloop.index }}">
                  <div class="cart-item__media">
                    {% if item.image %}
                      <img 
                        src="{{ item.image | image_url: width: 150 }}" 
                        alt="{{ item.image.alt | escape }}"
                        loading="lazy"
                        width="150"
                        height="{{ 150 | divided_by: item.image.aspect_ratio }}"
                        class="cart-item__image"
                      >
                    {% else %}
                      <div class="cart-item__placeholder">
                        {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                      </div>
                    {% endif %}
                  </div>

                  <div class="cart-item__details">
                    <h3 class="cart-item__title">
                      <a href="{{ item.url }}">{{ item.product.title }}</a>
                    </h3>
                    
                    {% if item.product.vendor and section.settings.show_vendor %}
                      <p class="cart-item__vendor">{{ item.product.vendor }}</p>
                    {% endif %}

                    {% unless item.product.has_only_default_variant %}
                      <div class="cart-item__variants">
                        {% for option in item.options_with_values %}
                          <span class="cart-item__variant">
                            {{ option.name }}: {{ option.value }}
                          </span>
                        {% endfor %}
                      </div>
                    {% endunless %}

                    {% if item.properties.size > 0 %}
                      <div class="cart-item__properties">
                        {% for property in item.properties %}
                          {% assign property_first_char = property.first | slice: 0 %}
                          {% unless property.last == blank or property_first_char == '_' %}
                            <span class="cart-item__property">
                              {{ property.first }}: {{ property.last }}
                            </span>
                          {% endunless %}
                        {% endfor %}
                      </div>
                    {% endif %}

                    <div class="cart-item__actions">
                      <div class="cart-item__quantity">
                        <label for="quantity-{{ forloop.index }}" class="visually-hidden">Quantity</label>
                        <div class="quantity-selector">
                          <button type="button" class="quantity-selector__button" data-action="decrease" data-line="{{ forloop.index }}">-</button>
                          <input 
                            type="number" 
                            name="updates[]" 
                            id="quantity-{{ forloop.index }}"
                            value="{{ item.quantity }}" 
                            min="0" 
                            class="quantity-selector__input"
                            data-line="{{ forloop.index }}"
                          >
                          <button type="button" class="quantity-selector__button" data-action="increase" data-line="{{ forloop.index }}">+</button>
                        </div>
                      </div>

                      <button type="button" class="cart-item__remove" data-line="{{ forloop.index }}" aria-label="Remove item">
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                          <path d="M8 8L13 3L14 4L9 9L14 14L13 15L8 10L3 15L2 14L7 9L2 4L3 3L8 8Z"/>
                        </svg>
                      </button>
                    </div>
                  </div>

                  <div class="cart-item__price">
                    {% if item.original_price != item.final_price %}
                      <span class="price price--sale">{{ item.final_price | money }}</span>
                      <span class="price price--compare">{{ item.original_price | money }}</span>
                    {% else %}
                      <span class="price">{{ item.final_price | money }}</span>
                    {% endif %}
                    
                    {% if item.quantity > 1 %}
                      <span class="cart-item__unit-price">{{ item.final_price | money }} each</span>
                    {% endif %}
                  </div>
                </div>
              {% endfor %}
            </div>

            <div class="cart__actions">
              <button type="submit" name="update" class="btn btn--secondary">Update Cart</button>
              <a href="/collections/all" class="btn btn--secondary">Continue Shopping</a>
            </div>
          </form>
        </div>

        <div class="cart__summary">
          <div class="cart-summary">
            <h2 class="cart-summary__title">Order Summary</h2>
            
            <div class="cart-summary__line">
              <span class="cart-summary__label">Subtotal</span>
              <span class="cart-summary__value">{{ cart.total_price | money }}</span>
            </div>

            {% if cart.cart_level_discount_applications.size > 0 %}
              {% for discount in cart.cart_level_discount_applications %}
                <div class="cart-summary__line cart-summary__line--discount">
                  <span class="cart-summary__label">
                    {% render 'icon-discount' %}
                    {{ discount.title }}
                  </span>
                  <span class="cart-summary__value">-{{ discount.total_allocated_amount | money }}</span>
                </div>
              {% endfor %}
            {% endif %}

            {% if section.settings.show_shipping_note %}
              <div class="cart-summary__note">
                <p>{{ section.settings.shipping_note | default: 'Shipping calculated at checkout' }}</p>
              </div>
            {% endif %}

            {% if section.settings.show_free_shipping_bar and cart.total_price < section.settings.free_shipping_threshold %}
              {% assign remaining = section.settings.free_shipping_threshold | minus: cart.total_price %}
              <div class="free-shipping-bar">
                <p class="free-shipping-bar__text">
                  Add {{ remaining | money }} more for free shipping!
                </p>
                <div class="free-shipping-bar__progress">
                  <div class="free-shipping-bar__fill" style="width: {{ cart.total_price | times: 100 | divided_by: section.settings.free_shipping_threshold }}%"></div>
                </div>
              </div>
            {% elsif section.settings.show_free_shipping_bar %}
              <div class="free-shipping-bar free-shipping-bar--complete">
                <p class="free-shipping-bar__text">
                  ðŸŽ‰ You qualify for free shipping!
                </p>
              </div>
            {% endif %}

            <div class="cart-summary__total">
              <span class="cart-summary__label">Total</span>
              <span class="cart-summary__value">{{ cart.total_price | money }}</span>
            </div>

            <div class="cart-summary__checkout">
              <button type="submit" name="add" class="btn btn--accent cart__checkout-button" form="cart-form">
                Checkout
              </button>
              
              {% if additional_checkout_buttons %}
                <div class="additional-checkout-buttons">
                  {{ content_for_additional_checkout_buttons }}
                </div>
              {% endif %}
            </div>

            {% if section.settings.show_security_note %}
              <div class="cart-summary__security">
                <div class="security-badges">
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <path d="M10 1L13 7L20 8L15 13L16 20L10 17L4 20L5 13L0 8L7 7L10 1Z" fill="currentColor"/>
                  </svg>
                  <span>Secure Checkout</span>
                </div>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    {% else %}
      <div class="cart__empty">
        <div class="cart-empty">
          <svg width="80" height="80" viewBox="0 0 24 24" fill="none">
            <path d="M7 4V2C7 1.45 7.45 1 8 1H16C16.55 1 17 1.45 17 2V4H20C20.55 4 21 4.45 21 5S20.55 6 20 6H19V19C19 20.1 18.1 21 17 21H7C5.9 21 5 20.1 5 19V6H4C3.45 6 3 5.55 3 5S3.45 4 4 4H7ZM9 3V4H15V3H9ZM7 6V19H17V6H7Z" fill="currentColor"/>
            <path d="M9 8V17H11V8H9ZM13 8V17H15V8H13Z" fill="currentColor"/>
          </svg>
          <h2 class="cart-empty__title">Your cart is empty</h2>
          <p class="cart-empty__description">Looks like you haven't added anything to your cart yet.</p>
          <a href="/collections/all" class="btn btn--accent">Start Shopping</a>
        </div>
      </div>
    {% endif %}
  </div>
</section>

{% stylesheet %}
  .cart-main {
    padding: var(--spacing-xl) 0;
    min-height: 60vh;
  }

  .cart__header {
    text-align: center;
    margin-bottom: var(--spacing-xl);
    padding-bottom: var(--spacing-lg);
    border-bottom: 1px solid var(--color-border);
  }

  .cart__title {
    font-size: clamp(1.75rem, 4vw, 2.5rem);
    margin-bottom: var(--spacing-sm);
  }

  .cart__count {
    color: var(--color-text-light);
    font-size: 1.125rem;
  }

  .cart__layout {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: var(--spacing-xxl);
    align-items: start;
  }

  /* Cart Items */
  .cart-items {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
  }

  .cart-item {
    display: grid;
    grid-template-columns: 120px 1fr auto;
    gap: var(--spacing-lg);
    padding: var(--spacing-lg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-medium);
    background-color: var(--color-background);
  }

  .cart-item__media {
    position: relative;
  }

  .cart-item__image {
    width: 100%;
    height: auto;
    border-radius: var(--radius-small);
  }

  .cart-item__placeholder {
    width: 100%;
    aspect-ratio: 1;
    background-color: var(--color-border);
    border-radius: var(--radius-small);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .cart-item__placeholder svg {
    width: 40px;
    height: 40px;
    opacity: 0.5;
  }

  .cart-item__details {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
  }

  .cart-item__title {
    font-size: 1.125rem;
    font-weight: 600;
    line-height: 1.3;
  }

  .cart-item__title a {
    color: var(--color-text);
    text-decoration: none;
    transition: var(--transition-fast);
  }

  .cart-item__title a:hover {
    color: var(--color-accent);
  }

  .cart-item__vendor {
    font-size: 0.875rem;
    color: var(--color-text-light);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .cart-item__variants {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-xs);
  }

  .cart-item__variant {
    font-size: 0.875rem;
    color: var(--color-text-light);
    padding: var(--spacing-xs) var(--spacing-sm);
    background-color: var(--color-border);
    border-radius: var(--radius-small);
  }

  .cart-item__properties {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-xs);
  }

  .cart-item__property {
    font-size: 0.875rem;
    color: var(--color-text-light);
  }

  .cart-item__actions {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    margin-top: var(--spacing-sm);
  }

  .cart-item__quantity {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
  }

  .quantity-selector {
    display: flex;
    align-items: center;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-small);
    overflow: hidden;
  }

  .quantity-selector__button {
    width: 36px;
    height: 36px;
    border: none;
    background-color: var(--color-background);
    cursor: pointer;
    font-size: 1rem;
    font-weight: 600;
    transition: var(--transition-fast);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quantity-selector__button:hover {
    background-color: var(--color-border);
  }

  .quantity-selector__input {
    width: 50px;
    height: 36px;
    border: none;
    text-align: center;
    font-size: 0.875rem;
    font-weight: 600;
    background-color: var(--color-background);
  }

  .cart-item__remove {
    background: none;
    border: none;
    color: var(--color-text-light);
    cursor: pointer;
    padding: var(--spacing-xs);
    border-radius: var(--radius-small);
    transition: var(--transition-fast);
  }

  .cart-item__remove:hover {
    color: var(--color-error);
    background-color: rgba(220, 53, 69, 0.1);
  }

  .cart-item__price {
    text-align: right;
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: var(--spacing-xs);
  }

  .cart-item__unit-price {
    font-size: 0.875rem;
    color: var(--color-text-light);
  }

  .price {
    font-size: 1.125rem;
    font-weight: 600;
  }

  .price--sale {
    color: var(--color-accent);
  }

  .price--compare {
    font-size: 1rem;
    color: var(--color-text-light);
    text-decoration: line-through;
    font-weight: 400;
  }

  /* Cart Actions */
  .cart__actions {
    display: flex;
    justify-content: space-between;
    margin-top: var(--spacing-xl);
    padding-top: var(--spacing-lg);
    border-top: 1px solid var(--color-border);
  }

  /* Cart Summary */
  .cart-summary {
    position: sticky;
    top: calc(var(--header-height) + var(--spacing-lg));
    background-color: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-large);
    padding: var(--spacing-xl);
  }

  .cart-summary__title {
    font-size: 1.25rem;
    margin-bottom: var(--spacing-lg);
    padding-bottom: var(--spacing-sm);
    border-bottom: 1px solid var(--color-border);
  }

  .cart-summary__line {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-sm);
  }

  .cart-summary__line--discount {
    color: var(--color-accent);
  }

  .cart-summary__label {
    font-size: 0.875rem;
    color: var(--color-text-light);
  }

  .cart-summary__value {
    font-weight: 600;
  }

  .cart-summary__note {
    margin: var(--spacing-md) 0;
    padding: var(--spacing-sm);
    background-color: var(--color-border);
    border-radius: var(--radius-small);
    font-size: 0.875rem;
    color: var(--color-text-light);
  }

  .cart-summary__total {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: var(--spacing-lg) 0;
    padding: var(--spacing-md) 0;
    border-top: 1px solid var(--color-border);
    font-size: 1.125rem;
    font-weight: 600;
  }

  .cart-summary__checkout {
    margin-bottom: var(--spacing-md);
  }

  .cart__checkout-button {
    width: 100%;
    font-size: 1rem;
    font-weight: 600;
    padding: var(--spacing-md);
  }

  .additional-checkout-buttons {
    margin-top: var(--spacing-sm);
  }

  .cart-summary__security {
    text-align: center;
    margin-top: var(--spacing-md);
  }

  .security-badges {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--spacing-xs);
    font-size: 0.875rem;
    color: var(--color-text-light);
  }

  /* Free Shipping Bar */
  .free-shipping-bar {
    margin: var(--spacing-md) 0;
    padding: var(--spacing-sm);
    background-color: var(--color-border);
    border-radius: var(--radius-small);
  }

  .free-shipping-bar--complete {
    background-color: rgba(40, 167, 69, 0.1);
    color: var(--color-success);
  }

  .free-shipping-bar__text {
    font-size: 0.875rem;
    margin-bottom: var(--spacing-xs);
    text-align: center;
  }

  .free-shipping-bar__progress {
    height: 4px;
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 2px;
    overflow: hidden;
  }

  .free-shipping-bar__fill {
    height: 100%;
    background-color: var(--color-accent);
    transition: var(--transition-medium);
  }

  /* Empty Cart */
  .cart__empty {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 50vh;
  }

  .cart-empty {
    text-align: center;
    max-width: 400px;
  }

  .cart-empty svg {
    margin-bottom: var(--spacing-lg);
    color: var(--color-text-light);
  }

  .cart-empty__title {
    font-size: 1.5rem;
    margin-bottom: var(--spacing-sm);
    color: var(--color-text-light);
  }

  .cart-empty__description {
    margin-bottom: var(--spacing-xl);
    color: var(--color-text-light);
    line-height: 1.6;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .cart__layout {
      grid-template-columns: 1fr;
      gap: var(--spacing-xl);
    }

    .cart-summary {
      position: static;
    }
  }

  @media (max-width: 768px) {
    .cart-item {
      grid-template-columns: 80px 1fr;
      gap: var(--spacing-md);
    }

    .cart-item__price {
      grid-column: 1 / -1;
      text-align: left;
      align-items: flex-start;
      margin-top: var(--spacing-sm);
      padding-top: var(--spacing-sm);
      border-top: 1px solid var(--color-border);
    }

    .cart__actions {
      flex-direction: column;
      gap: var(--spacing-sm);
    }

    .cart-summary {
      padding: var(--spacing-lg);
    }
  }

  @media (max-width: 480px) {
    .cart-item {
      padding: var(--spacing-md);
    }

    .cart-item__actions {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--spacing-sm);
    }

    .quantity-selector__button,
    .quantity-selector__input {
      height: 32px;
    }

    .quantity-selector__button {
      width: 32px;
    }

    .quantity-selector__input {
      width: 40px;
    }
  }

  .visually-hidden {
    position: absolute !important;
    overflow: hidden !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    padding: 0 !important;
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
  }
{% endstylesheet %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Quantity selectors
    const quantityButtons = document.querySelectorAll('.quantity-selector__button');
    const quantityInputs = document.querySelectorAll('.quantity-selector__input');
    
    quantityButtons.forEach(button => {
      button.addEventListener('click', function() {
        const action = this.dataset.action;
        const line = this.dataset.line;
        const input = document.querySelector(`#quantity-${line}`);
        let currentValue = parseInt(input.value);
        
        if (action === 'increase') {
          input.value = currentValue + 1;
        } else if (action === 'decrease' && currentValue > 1) {
          input.value = currentValue - 1;
        }
        
        // Auto-update cart
        updateCart();
      });
    });

    // Quantity input changes
    quantityInputs.forEach(input => {
      input.addEventListener('change', function() {
        if (parseInt(this.value) < 1) {
          this.value = 1;
        }
        updateCart();
      });
    });

    // Remove buttons
    const removeButtons = document.querySelectorAll('.cart-item__remove');
    removeButtons.forEach(button => {
      button.addEventListener('click', function() {
        const line = this.dataset.line;
        const input = document.querySelector(`#quantity-${line}`);
        input.value = 0;
        updateCart();
      });
    });

    function updateCart() {
      const formData = new FormData(document.querySelector('.cart-form'));
      
      fetch('/cart/update.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(cart => {
        // Reload page to update cart
        window.location.reload();
      })
      .catch(error => {
        console.error('Error updating cart:', error);
      });
    }
  });
</script>

{% schema %}
{
  "name": "Cart",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_shipping_note",
      "label": "Show shipping note",
      "default": true
    },
    {
      "type": "text",
      "id": "shipping_note",
      "label": "Shipping note",
      "default": "Shipping calculated at checkout"
    },
    {
      "type": "checkbox",
      "id": "show_free_shipping_bar",
      "label": "Show free shipping progress bar",
      "default": true
    },
    {
      "type": "number",
      "id": "free_shipping_threshold",
      "label": "Free shipping threshold (in cents)",
      "default": 7500
    },
    {
      "type": "checkbox",
      "id": "show_security_note",
      "label": "Show security badges",
      "default": true
    }
  ]
}
{% endschema %}
